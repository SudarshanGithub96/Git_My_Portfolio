@model My_Portfolio.Models.User

@{
    ViewData["Title"] = "SignUp";

}

<div class="Signup_Page container-fluid">
    <div class="row">
        <div class="col-4 offset-3 border border-warning-subtle rounded pl-5 pr-5 pb-5">
            <div class="text-center">
                <h1 class="text-info">User Sign Up Form</h1>
            </div>
            <form asp-action="SignUp" class="text-light" method="post" onsubmit="return validateForm()">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Username"></label>
                    <input asp-for="Username" class="form-control" placeholder="User Name" autocomplete="off" type="text" id="Username" />
                    <span asp-validation-for="Username" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Email"></label>
                    <input asp-for="Email" class="form-control" placeholder="Email" autocomplete="off" type="text" id="Email" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Mobile"></label>
                    <input asp-for="Mobile" class="form-control" placeholder="Mobile" autocomplete="off" type="text" id="Mobile" />
                    <span asp-validation-for="Mobile" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Password"></label>
                    <input asp-for="Password" class="form-control" placeholder="Password" autocomplete="off" type="password" id="Password" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ConfirmPassword"></label>
                    <input asp-for="ConfirmPassword" class="form-control" placeholder="Confirm Password" autocomplete="off" type="password" id="ConfirmPassword" />
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Register" class="btn btn-primary btn-lg mb-1 float-right" id="signupForm" />
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $('#signupForm').submit(function (e) {
            e.preventDefault();

            // Clear previous validation messages
            $('#formValidationSummary').html('');

            // Get form data
            var formData = {
                Username: $('#Username').val(),
                Email: $('#Email').val(),
                Mobile: $('#Mobile').val(),
                Password: $('#Password').val(),
                ConfirmPassword: $('#ConfirmPassword').val()
            };

            // Client-side validation
            var errors = [];
            if (formData.Username === '') {
                errors.push('Username is required.');
            }
            if (formData.Email === '') {
                errors.push('Email is required.');
            } else if (!/^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/.test(formData.Email)) {
                errors.push('Invalid email format.');
            }
            if (formData.Mobile === '') {
                errors.push('Mobile number is required.');
            } else if (!/^\d{10}$/.test(formData.Mobile)) {
                errors.push('Invalid mobile number.');
            }
            if (formData.Password === '') {
                errors.push('Password is required.');
            }
            if (formData.ConfirmPassword === '') {
                errors.push('Confirm Password is required.');
            } else if (formData.Password !== formData.ConfirmPassword) {
                errors.push('Passwords do not match.');
            }

            if (errors.length > 0) {
                $('#formValidationSummary').html(errors.join('<br>'));
                return false;
            }

            // Send data to server via AJAX
            $.ajax({
                type: 'POST',
                url: '@Url.Action("SignUp", "Home")', // Replace with your controller action
                data: formData,
                success: function (response) {
                    if (response.success) {
                        alert('Registration successful!');
                        // Optionally, redirect to another page
                    } else {
                        $('#formValidationSummary').html(response.message);
                    }
                },
                error: function () {
                    alert('An error occurred. Please try again.');
                }
            });
        });
    });
</script>

